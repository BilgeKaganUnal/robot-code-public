syntax = "proto2";

package o2016.drivetrain;

option cc_enable_arenas = true;

enum Gear {
  kLowGear = 0;
  kHighGear = 1;
}

enum DriveType {
  kDistanceCommand = 0;
  kVelocityCommand = 1;
}

message DrivetrainState {
  required double forward_distance = 1;
  required double heading = 2;
  required double forward_velocity = 3;
  required double angular_velocity = 4;
}

message DrivetrainGoal {
  message VelocityCommand {
    required double forward_velocity = 1;
    required double angular_velocity = 2;

    // Should it override distance commands? True will cancel any
    // currently-running command, false or unset will not interrupt distance
    // commands.
    optional bool should_override = 3;
  }

  message DistanceCommand {
    required DrivetrainState final_state = 1;
  }

  required Gear gear = 2;
  oneof command {
    VelocityCommand velocity_command = 3;
    DistanceCommand distance_command = 4;
  }
}

message DrivetrainStatus {
  required DrivetrainState observed_state = 1;

  required DriveType current_driving_type = 2;
  required Gear current_gear = 3;

  // The current goal state (either of a profile or of velocity)
  required DrivetrainState filtered_goal = 4;
  // The final state of the currently-running profile
  optional DrivetrainState profile_goal = 5;

  // Sent out in a single message when a profile has been completed successfully
  optional bool just_finished_profile = 6;
  // Increments every time a profile completes or is interrupted
  optional uint32 num_profiles_run = 7;
}

message DrivetrainInput {
  // Encoders in meters
  required double left_encoder = 1;
  required double right_encoder = 2;

  required double gyro_angle = 3;
}

message DrivetrainOutput {
  required double left_voltage = 1;
  required double right_voltage = 2;
  required bool high_gear = 3;
}
